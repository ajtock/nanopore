#!/bin/bash

# Using samtools mpileup, create a variant pileup file in which each column of
# variant alleles corresponds to those called within one ONT read alignment

# The resultant pileup file can the be analysed using pileup_to_haplotype.R to
# evaluate recombination rate (cM/Mb) at each marker

# Usage:
# bash longshot.sh barcode1_120 60 '3:634109-639934' 48
 
sample=$1
MAPQ=$2
region=$3
threads=$4

conda activate longshot

# Create BED3 file containing known variant sites of interest
# to be provided to mpileup
awk 'BEGIN {OFS="\t"}; {print $1, ($2 - 1), $2}' 3a_SNPs_indels_in_Col_and_Ws.tsv | \
  tail -n +2 > 3a_SNPs_indels_in_Col_and_Ws.bed

# Create per-alignment BAM output directory if it doesn't already exist
[[ -d aln ]] || mkdir aln

# Filter BAM to retain only primary alignments and
# exclude alignments with MAPQ scores < ${MAPQ}
# -F 2304 excludes secondary and supplementary alignments
samtools view -bh -@ ${threads} -F 2304 -q ${MAPQ} \
  -o minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.bam \
  minimap2_TAIR10_${sample}_sorted.bam
samtools index minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.bam 

# Extract SAM header for later concatenation with each alignment in BAM
# to be supplied as input to longshot variant-calling software
samtools view -H minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.bam \
  > minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_header.sam

# Get number of alignments in BAM
aln=$(samtools view minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.bam | wc -l)

# Generate indexed BAM file for each alignment
# Method 1 (much more efficient than Method 1)
# IFS="" preserves leading and trailing white space in $LINE,
# and prevents the read function from splitting up each line into fields
# The -r option disables the interpretation of backslashes as escape sequences
# Because the read function fails when it encounters end-of-file before the line ends,
# read -r line || [[ -n "$LINE" ]] tests for a non-empty line
counter=0
while IFS="" read -r line || [[ -n "${line}" ]]
do
  ((counter++))
  printf '%s\n' "${line}" | \
  cat minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_header.sam - | \ 
  samtools view -bh > aln/minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_aln_${counter}.bam
done < <(samtools view minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.bam)

## Generate indexed BAM file for each alignment
## Method 2
## ${x} in this for loop decreases from ${aln} to 1
#for x in $(seq ${aln} -1 1)
#do
#  samtools view minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.bam | \
#    head -n $(( -${x} + 1)) | tail -n 1 | \
#    cat minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_header.sam - | \
#    samtools view -bh > minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_aln_"$(( ${aln} - ( ${x} - 1 ) ))".bam
#  samtools index minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_aln_"$(( ${aln} - ( ${x} - 1 ) ))".bam
#done

# Generate list of per-alignment BAM file names (as generated by above loop)
# as a text file with one BAM file name per line
[[ -f minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_BAM_list.txt ]] && \
echo "ERROR: minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_BAM_list.txt EXISTS; NOT OVERWRITTEN" || \
for x in $(seq 1 ${aln})
do
  echo "aln/minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_aln_${x}.bam" \
    >> minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_BAM_list.txt
done

# Change limit on number of open files from 1024 to 1048576
ulimit -Sn 1048576

# Generate textual pileup matrix with columns (info in columns 4-6
# is output for each BAM file supplied via the --bam_list option):
# 1. Sequence name (e.g., chromosome)
# 2. 1-based coordinate
# 3. Reference base
# 4. BAM file 1: Number of reads covering this position
# 5. BAM file 1: Read bases at this position
## ("." denotes a match to the reference base on the positive strand,
##  "," denotes a match to the reference base on the negative strand,
##  uppercase letters denote non-reference read base on positive strand,
##  lowercase letters denote non-reference read base on negative strand,
##  "*" denotes the absence of a base call (e.g., due to no coverage),
##  "^]" denotes a base at the start of a read,
##  "$" denotes a base at the end of a  read)
# 6. BAM file 1: Phred-scaled base qualities
[[ -f minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.plp ]] && \
echo "ERROR: minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.plp EXISTS; NOT OVERWRITTEN" || \
samtools mpileup --bam-list minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_BAM_list.txt \
                 --fasta-ref TAIR10_chr_all.fa \
                 --positions 3a_SNPs_indels_in_Col_and_Ws.bed \
		 --ignore-RG \
                 --min-BQ 0 \
                 > minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}.plp

## Provide each aligment in BAM as input to longshot
#for x in $(seq 1 3606)
#do
#  longshot --region ${region} \
#           --bam minimap2_TAIR10_${sample}_sorted_primary_MAPQ${MAPQ}_aln_${x}.bam \
#           --ref TAIR10_chr_all.fa \
#           --out vcf/${sample}_aln_${x}.vcf \
#           --min_cov 1 \
#           --min_alt_count 1 \
#           --min_allele_qual 1.0 \
#           --potential_snv_cutoff 1000 \
#           --hap_converge_delta 0.1
#done
